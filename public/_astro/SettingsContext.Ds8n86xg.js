import{j as g}from"./jsx-runtime.BJTeMHoC.js";import{r as s}from"./index.CbttJwvd.js";const c=s.createContext(),b=()=>{const i=s.useContext(c);if(!i)throw new Error("useSettings must be used within a SettingsProvider");return i},E=({children:i})=>{const[n,a]=s.useState({weightUnit:"kg",lengthUnit:"cm",dateFormat:"MM/DD/YYYY",timeFormat:"12h",enableMeals:!0,enableExercise:!0,enableSleep:!0,enableMeasurements:!0,theme:"light"});s.useEffect(()=>{if(typeof window>"u")return;const t=localStorage.getItem("healthTrackerSettings"),r=localStorage.getItem("healthEntries");if(t)try{const e=JSON.parse(t);a(o=>({...o,...e}))}catch(e){console.error("Error loading settings:",e)}if(r)try{const e=JSON.parse(r);(e.enableMeals!==void 0||e.enableExercise!==void 0||e.enableSleep!==void 0||e.enableMeasurements!==void 0)&&a(o=>({...o,...e}))}catch(e){console.error("Error loading health entries:",e)}},[]),s.useEffect(()=>{if(typeof window>"u")return;localStorage.setItem("healthTrackerSettings",JSON.stringify(n));const t={enableMeals:n.enableMeals,enableExercise:n.enableExercise,enableSleep:n.enableSleep,enableMeasurements:n.enableMeasurements},e={...JSON.parse(localStorage.getItem("healthEntries")||"{}"),...t};localStorage.setItem("healthEntries",JSON.stringify(e))},[n]);const l={settings:n,updateSetting:(t,r)=>{a(e=>({...e,[t]:r}))},updateSettings:t=>{a(r=>({...r,...t}))},convertWeight:(t,r,e)=>r===e?t:r==="lbs"&&e==="kg"?t*.453592:r==="kg"&&e==="lbs"?t/.453592:t,convertLength:(t,r,e)=>r===e?t:r==="in"&&e==="cm"?t*2.54:r==="cm"&&e==="in"?t/2.54:t,convertSkinfold:(t,r,e)=>r===e?t:r==="mm"&&e==="cm"?t/10:r==="cm"&&e==="mm"?t*10:t};return g.jsx(c.Provider,{value:l,children:i})};export{E as S,b as u};
